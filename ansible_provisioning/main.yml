# PRE-provisioning VM
- name: "Provision Enviorment"
  strategy: linear
  hosts: all
  become: true 
  tasks:
  
  - name: Debug VARS
    include_tasks: 
      file: tasks/debug.yml
    tags: always
  
  - name: Install Required Packages
    include_tasks: 
      file: tasks/provisioning.yml
    tags: [packages, smb]
  - name: Setup SSH
    include_tasks: 
      file: tasks/ssh_setup.yml
    tags: ssh
  - name: Setup firewall
    include_tasks: 
      file: tasks/ufw.yml
    tags: ufw


# Swarm setup
- name: "Glusterfs Stop"
  hosts: [master_nodes, worker_nodes]
  become_user: "root"
  become: true
  vars_files:
    - vars/lists.yml
  tasks:
  - name: Stop the GlusterFS service
    service:
      name: glusterd
      state: stopped
    tags: [glusterfs, containers]

# Swarm setup
- name: "Configure Swarm"
  hosts: master_nodes
  become_user: "root"
  become: true
  vars_files:
    - vars/lists.yml
    
  tasks:
  - name: Install swarm
    include_tasks: 
      file: tasks/swarm_master.yml
      apply:
        tags: swarm
    tags: swarm

  - name: Containers Pre-Provision
    include_tasks: 
      file: tasks/container-preprovisioning.yml
    tags: [containers,pre-prov]

- name: "Join Swarm"
  hosts: worker_nodes
  become_user: "root"
  become: true
  tasks:
  - name: Install swarm
    include_tasks: 
      file: tasks/swarm_worker_join.yml
    tags: swarm

# NFS Setup
- name: Mount NFS on nodes
  hosts: all
  become: yes
  roles:
    - nfs
  tags: [nfs, containers, swarm-only]

# glusterfs setup

- name: "Glusterfs Stop"
  hosts: [master_nodes, worker_nodes]
  become_user: "root"
  become: true
  vars_files:
    - vars/lists.yml
  tasks:
  - name: Start the GlusterFS service
    service:
      name: glusterd
      state: started
    tags: containers

- name: "Configure glusterfs prep"
  hosts: [master_nodes, worker_nodes]
  become_user: "root"
  become: true
  tasks:
  - name: Install Glusterfs finishing touches
    include_tasks: tasks/glusterfs_prep.yml
    tags: [glusterfs, containers]

- name: "Configure glusterfs workers"
  hosts: worker_nodes
  become_user: "root"
  become: true
  tasks:
  - name: Install Glusterfs
    include_tasks: tasks/glusterfs_worker.yml
    tags: [glusterfs, containers]

- name: "Configure glusterfs masters"
  hosts: master_nodes
  become_user: "root"
  become: true
  tasks:
  - name: Install Glusterfs
    include_tasks: tasks/glusterfs_master.yml
    tags: [glusterfs, containers, gluster-performance]

- name: "Configure glusterfs post"
  hosts: [master_nodes, worker_nodes]
  become_user: "root"
  become: true
  tasks:
  - name: Install Glusterfs finishing touches
    include_tasks: tasks/glusterfs_post.yml
    tags: [glusterfs, containers]

- name: "Glusterfs Start"
  hosts: [master_nodes, worker_nodes]
  become_user: "root"
  become: true
  vars_files:
    - vars/lists.yml
  tasks:
  - name: Start the GlusterFS service
    service:
      name: glusterd
      state: started
    tags: [glusterfs,containers]


# Standalone Containers
- name: "Mini_Linux Containers"
  hosts: mini_linux
  become_user: "root"
  become: true
  vars_files:
    - vars/lists.yml
  roles:
    - secondary-dns-server
    - standalone-portainer-agent
  tags: [mini-linux, portainer-agent]

- name: "Launch Standalone docker compose Containers"
  hosts: all
  become_user: "root"
  become: true
  vars_files:
    - vars/lists.yml
  tasks:
  - name: Install Plex Containers
    include_tasks: 
      file: tasks/plex_cluster.yml
    tags:  [containers,docker-only,plex] 
  - name: Install Torrent Containers
    include_tasks: 
      file: tasks/torrent_stack.yml
    tags: [docker-only,containers,torrent-stack]
# Swarm Containers
- name: Apply Traefik role
  hosts: all
  become: yes
  roles:
    - traefik
  tags: [traefik, containers]
  
- name: Apply homepage role
  hosts: all
  become: yes
  roles:
    - homepage
  tags: [homepage,containers]

- name: "Launch Swarm Containers"
  hosts: master_node
  become_user: "root"
  become: true
  vars_files:
    - vars/lists.yml
  tasks:
  - name: Git Clone App Repos
    include_tasks: 
      file: tasks/clone_app_repos.yml
    tags: clone_repos

  - name: Build Docker Images
    include_tasks: 
      file: tasks/image_build.yml
      apply:
       tags: images
    tags: images

  - name: Install Containers
    include_tasks: 
      file: tasks/containers.yml
    tags:  [containers,docker-only,swarm-only] 


# DNS
- name: Apply DNS role
  vars_files:
    - vars/lists.yml
  hosts: all
  become: yes
  roles:
    - dns
  tags: [dns]

# # DNS
# - name: "Clean DNS"
#   hosts: [master_nodes,secondary_dns_nodes]
#   vars_files:
#     - vars/lists.yml
#   become_user: "root"
#   become: true
#   tasks:

# - name: "Loop DNS"
#   hosts: all
#   vars_files:
#     - vars/lists.yml
#   become_user: "root"
#   become: true
#   tasks:
#   - name: Round robbin DNS Tasks
#     include_tasks: 
#       file: tasks/dns_roundrobbin.yml
#       apply:
#         tags: dns
#     tags: dns
# - name: "Cloudflare DNS"
#   hosts: master_nodes
#   vars_files:
#     - vars/lists.yml
#   become_user: "root"
#   become: true
#   tasks:
#   - name: Cloudflare DNS 
#     include_tasks: 
#       file: tasks/cloudflare.yml
#       apply:
#         tags: cloudflare
#     tags: cloudflare

# POST PROVISIONING
- name: "POST PROVISIONING"
  hosts: all
  become_user: "root"
  become: true
  tasks:
  - name: Post Provisioning CRON Tasks
    include_tasks: 
      file: tasks/cron.yml
      apply:
        tags: [post, cron]
    tags: [post, cron]

  - name: Update Actions
    include_tasks: 
      file: tasks/update_ubuntu.yml
      apply:
        tags: update_ubuntu
    tags: update_ubuntu
  - name: Reboot Actions
    include_tasks: 
      file: tasks/reboot.yml
      apply:
        tags: reboot
    tags: reboot

#FAIL2BAN
- name: Apply Fail2Ban role
  hosts: all
  become: yes
  vars:
    fail2ban_jail_local:
      sshd:
        enabled: true
        port: ssh
        filter: sshd
        logpath: /var/log/auth.log
        maxretry: 5
        bantime: 3600
      apache:
        enabled: true
        port: http,https
        filter: apache-auth
        logpath: /var/log/apache2/*access.log
        maxretry: 5
        bantime: 3600
    fail2ban_config_file: "/etc/fail2ban/jail.local"
    fail2ban_service: "fail2ban"
    fail2ban_default_bantime: 3600 
    fail2ban_default_maxretry: 5 
  roles:
    - fail2ban
  tags: fail2ban
  handlers:
    - name: restart fail2ban
      service:
        name: fail2ban
        state: restarted

- name: "Backups"
  hosts: master_nodes
  become_user: "root"
  become: true
  tasks:
  - name: Backup Tasks
    include_tasks:
      file: tasks/backups.yml
      apply:
        tags: backups
    tags: backups