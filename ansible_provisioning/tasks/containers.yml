- name: create container dirs if they don't exist
  file:
    path: "{{ item }}"
    state: directory
    owner: nobody
    group: nogroup
    mode: 0755
  loop:
    - /home/ubuntu/container-program-files/plex/config
    - /home/ubuntu/container-program-files/plex/tvseries
    - /home/ubuntu/container-program-files/plex/movies
    - /home/ubuntu/container-program-files/deluge/config
    - /home/ubuntu/container-program-files/deluge/downloads
    - /home/ubuntu/container-program-files/jackett
    - /home/ubuntu/container-program-files/sonarr/config
    - /home/ubuntu/container-program-files/radarr
    - /home/ubuntu/container-program-files/pihole
    - /home/ubuntu/container-program-files/dnsmasq.d
    - /home/ubuntu/container-program-files/overseerr/config
    - /home/ubuntu/container-program-files/PROXY-MANAGER/data
    - /home/ubuntu/container-program-files/PROXY-MANAGER/letsencrypt
    - /home/ubuntu/container-program-files/budscraper.io/temp/o
        
 
- name: Copy a compose" files from repo to the remote machine to authenticate git repos on host machine
  copy:
    src: "/home/{{user_id}}/repos/{{repo_name}}/docker-compose"
    dest: "/tmp"

- name: Docker compose UP Nginx ws Stack
  shell: |
    env ADMIN_PASS={{ansible_ssh_pass}} docker stack deploy -c /tmp/docker-compose/nginx-stack/docker-compose.yml ws

- name: Docker compose UP pihole
  shell: |
    env ADMIN_PASS={{ansible_ssh_pass}} docker stack deploy -c /tmp/docker-compose/pi/docker-compose.yml pi

- name: Docker compose UP media-stack
  shell: |
    docker stack deploy -c /tmp/docker-compose/media-stack/docker-compose.yml media

- name: Docker compose UP NGINX-PROXY-MANAGER
  shell: |
    docker stack deploy -c /tmp/docker-compose/proxy-manager/docker-compose.yml proxy

- name: Scale NGINX-MANAGER for 2 nodes
  shell:  |
    docker service scale proxy_nginx-proxy-manager=2

- name: Scale pihole for 2 nodes
  shell:  docker service scale pi_pihole=2

- name: Scale media for 2 nodes
  shell:  |
    docker service scale media_plex=2
    docker service scale media_radarr=2
    docker service scale media_overseerr=2
    docker service scale media_jackett=2
    docker service scale media_deluge=2
    docker service scale media_sonarr=2

- name: Scale Web APPS Servers for 2 nodes
  shell:  |
    docker service scale ws_lucinda=2
    docker service scale ws_santos=2
    docker service scale ws_aplb=2

# Non Swarm Services

- name: Vault Warden Server
  delegate_to: worker_node_1
  docker_container:
    name: "vaultwarden"
    image: "vaultwarden/server:latest"
    pull: yes
    state: started
    restart: yes
    restart_policy: unless-stopped
    ports: 
      - "8096:80"
    volumes:
      - '/home/ubuntu/container-program-files/vault_warden:/data/'
    env: 
        SIGNUPS_ALLOWED: "true"
  tags: vault

     
