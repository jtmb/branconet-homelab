version: '3.8'
services:
  lucinda:
    image: 'nginx'
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.lucinda.rule=Host(`lucinda.${lan_domain_name}`)"
        - "traefik.http.services.lucinda.loadbalancer.server.port=80" #uses internal docker port
        - "traefik.http.routers.lucinda.entrypoints=websecure"
        - "traefik.http.routers.lucinda.tls=true"
        - "traefik.http.routers.lucinda.tls.certresolver=myresolver"
        - "traefik.http.routers.lucinda.tls.domains[0].main=lucinda.${lan_domain_name}"
        # to add additional DNS names
        # - "traefik.http.routers.lucinda.tls.domains[0].sans=lucinda.${lan_domain_name}"
    networks:
      - container-swarm-network
    restart: unless-stopped
    ports:
      - '8080:80'
    environment:
      DISABLE_IPV6: 'true'
    volumes:
      - ${container_volumes_location}/ws-lucinda:/usr/share/nginx/html
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-retries: "5"
        loki-batch-size: "400"

  santos:
    image: 'nginx'
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.santos.rule=Host(`santos.${lan_domain_name}`)"
        - "traefik.http.services.santos.loadbalancer.server.port=80" #uses internal docker port
        - "traefik.http.routers.santos.entrypoints=websecure"
        - "traefik.http.routers.santos.tls=true"
        - "traefik.http.routers.santos.tls.certresolver=myresolver"
        - "traefik.http.routers.santos.tls.domains[0].main=santos.${lan_domain_name}"
        # to add additional DNS names
        # - "traefik.http.routers.santos.tls.domains[0].sans=santos.${lan_domain_name}"
    networks:
      - container-swarm-network
    restart: unless-stopped
    ports:
      - '8081:80'
    environment:
      DISABLE_IPV6: 'true'
    volumes:
      - ${container_volumes_location}/ws-santos:/usr/share/nginx/html
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-retries: "5"
        loki-batch-size: "400"

  aplb:
    image: 'nginx'
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.aplb.rule=Host(`aplb.${lan_domain_name}`)"
        - "traefik.http.services.aplb.loadbalancer.server.port=80" #uses internal docker port
        - "traefik.http.routers.aplb.entrypoints=websecure"
        - "traefik.http.routers.aplb.tls=true"
        - "traefik.http.routers.aplb.tls.certresolver=myresolver"
        - "traefik.http.routers.aplb.tls.domains[0].main=aplb.${lan_domain_name}"
        # to add additional DNS names
        # - "traefik.http.routers.aplb.tls.domains[0].sans=aplb.${lan_domain_name}"
    networks:
      - container-swarm-network
    restart: unless-stopped
    ports:
      - '8082:80'
    environment:
      DISABLE_IPV6: 'true'
    volumes:
      - ${container_volumes_location}/ws-aplb:/usr/share/nginx/html
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-retries: "5"
        loki-batch-size: "400"

  mcwebsite:
    image: 'nginx'
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.mc.rule=Host(`mc.${lan_domain_name}`)"
        - "traefik.http.services.mc.loadbalancer.server.port=80" #uses internal docker port
        - "traefik.http.routers.mc.entrypoints=websecure"
        - "traefik.http.routers.mc.tls=true"
        - "traefik.http.routers.mc.tls.certresolver=myresolver"
        - "traefik.http.routers.mc.tls.domains[0].main=mc.${lan_domain_name}"
        # to add additional DNS names
        # - "traefik.http.routers.mc.tls.domains[0].sans=mc.${lan_domain_name}"
    networks:
      - container-swarm-network
    restart: unless-stopped
    ports:
      - '8083:80'
    environment:
      DISABLE_IPV6: 'true'
    volumes:
      - ${container_volumes_location}/mc-branconet-lan:/usr/share/nginx/html
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-retries: "5"
        loki-batch-size: "400"

networks:
  container-swarm-network:
    external: true
